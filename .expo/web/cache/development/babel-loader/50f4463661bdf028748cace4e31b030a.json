{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unSubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Player\");\n      }\n    });\n    return unSubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Registered with \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Logged in with \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Passord\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/sande/Downloads/Dilemma/screens/LoginScreen.js"],"names":["useNavigation","React","useEffect","useState","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unSubscribe","onAuthStateChanged","user","replace","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/core';\r\nimport React, {useEffect, useState } from 'react';\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, View } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { auth } from '../firebase';\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unSubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Player\")\r\n      }\r\n    })\r\n\r\n    return unSubscribe\r\n  }, [])\r\n\r\n  const handleSignUp = () => {\r\n    auth \r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then(userCredentials => {\r\n      const user = userCredentials.user;\r\n      console.log(\"Registered with \", user.email);\r\n    })\r\n    .catch(error => alert(error.message))\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then (userCredentials => {\r\n      const user = userCredentials.user;\r\n      console.log(\"Logged in with \", user.email);\r\n    })\r\n    .catch(error => alert(error.message))\r\n  }\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n    style={styles.container}\r\n    behavior=\"padding\"\r\n    >\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n            placeholder=\"Email\"\r\n             value={email}\r\n             onChangeText= {text => setEmail(text) }\r\n            style={styles.input}\r\n        />\r\n        <TextInput\r\n            placeholder=\"Passord\"\r\n             value={password}\r\n             onChangeText= {text => setPassword(text) }\r\n            style={styles.input}\r\n            secureTextEntry\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n            onPress={handleLogin}\r\n            style={styles.button}\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>  \r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n            onPress={handleSignUp}\r\n            style={[styles.button, styles.buttonOutline]}\r\n        >\r\n          <Text style={styles.buttonOutlineText}>Register</Text>  \r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    },\r\ninputContainer: {\r\n    width: '80%'\r\n},\r\n\r\ninput: {\r\n    backgroundColor: 'white',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n},\r\n\r\nbuttonContainer: {\r\n    width: '60%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n\r\n},\r\nbutton: {\r\n    backgroundColor: '#0782F9',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n},\r\nbuttonOutline: {\r\n    backgroundColor: 'white',\r\n    marginTop: 5,\r\n    borderColor: '#0782F9',\r\n    borderWidth: 2,\r\n},\r\nbuttonText: {\r\n    color: 'white',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n},\r\n\r\nbuttonOutlineText: {\r\n    color: '#0782F9',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}